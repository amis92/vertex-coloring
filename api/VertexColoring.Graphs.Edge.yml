### YamlMime:ManagedReference
items:
- uid: VertexColoring.Graphs.Edge
  commentId: T:VertexColoring.Graphs.Edge
  id: Edge
  parent: VertexColoring.Graphs
  children:
  - VertexColoring.Graphs.Edge.#ctor(VertexColoring.Graphs.Vertex,VertexColoring.Graphs.Vertex,System.String)
  - VertexColoring.Graphs.Edge.CompareTo(VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.Equals(System.Object)
  - VertexColoring.Graphs.Edge.Equals(VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.GetEnumerator
  - VertexColoring.Graphs.Edge.GetHashCode
  - VertexColoring.Graphs.Edge.Label
  - VertexColoring.Graphs.Edge.op_Equality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.op_GreaterThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.op_GreaterThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.op_Inequality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.op_LessThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.op_LessThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  - VertexColoring.Graphs.Edge.ToString
  - VertexColoring.Graphs.Edge.Vertex1
  - VertexColoring.Graphs.Edge.Vertex2
  - VertexColoring.Graphs.Edge.WithLabel(System.String)
  - VertexColoring.Graphs.Edge.WithVertex1(VertexColoring.Graphs.Vertex)
  - VertexColoring.Graphs.Edge.WithVertex2(VertexColoring.Graphs.Vertex)
  langs:
  - csharp
  - vb
  name: Edge
  nameWithType: Edge
  fullName: VertexColoring.Graphs.Edge
  type: Class
  source:
    id: Edge
    path: ''
    startLine: 2446
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  summary: "\nDefines an immutable connection between two vertices as unordered vertex pair. Although \nvertices are accessible in ordered manner, all operators, comparisons, equality etc. make\nno distinction to order. For all intents and purposes edge (v1,v2) is the same as (v2,v1).\nEnumerating this object will yield both vertices in arbitrary order (their order must not\nbe relied upon).\n"
  example: []
  syntax:
    content: 'public sealed class Edge : IEquatable<Edge>, IComparable<Edge>, IEnumerable<Vertex>, IEquatable<Edge>'
    content.vb: >-
      Public NotInheritable Class Edge

          Inherits IEquatable(Of Edge)

          Implements IComparable(Of Edge), IEnumerable(Of Vertex), IEquatable(Of Edge)
  inheritance:
  - System.Object
  implements:
  - IComparable{VertexColoring.Graphs.Edge}
  - IEnumerable{VertexColoring.Graphs.Vertex}
  - IEquatable{VertexColoring.Graphs.Edge}
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: VertexColoring.Graphs.Edge.Vertex1
  commentId: P:VertexColoring.Graphs.Edge.Vertex1
  id: Vertex1
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Vertex1
  nameWithType: Edge.Vertex1
  fullName: VertexColoring.Graphs.Edge.Vertex1
  type: Property
  source:
    id: Vertex1
    path: ''
    startLine: 2329
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  summary: "\nGets one of edge's vertices.\n"
  example: []
  syntax:
    content: public Vertex Vertex1 { get; }
    parameters: []
    return:
      type: VertexColoring.Graphs.Vertex
    content.vb: Public ReadOnly Property Vertex1 As Vertex
  overload: VertexColoring.Graphs.Edge.Vertex1*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VertexColoring.Graphs.Edge.Vertex2
  commentId: P:VertexColoring.Graphs.Edge.Vertex2
  id: Vertex2
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Vertex2
  nameWithType: Edge.Vertex2
  fullName: VertexColoring.Graphs.Edge.Vertex2
  type: Property
  source:
    id: Vertex2
    path: ''
    startLine: 2334
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  summary: "\nGets the other of edge's vertices (other to <xref href=\"VertexColoring.Graphs.Edge.Vertex1\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public Vertex Vertex2 { get; }
    parameters: []
    return:
      type: VertexColoring.Graphs.Vertex
    content.vb: Public ReadOnly Property Vertex2 As Vertex
  overload: VertexColoring.Graphs.Edge.Vertex2*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VertexColoring.Graphs.Edge.Label
  commentId: P:VertexColoring.Graphs.Edge.Label
  id: Label
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Edge.Label
  fullName: VertexColoring.Graphs.Edge.Label
  type: Property
  source:
    id: Label
    path: ''
    startLine: 2339
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  summary: "\nGets this edge's arbitrary label.\n"
  example: []
  syntax:
    content: public string Label { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Label As String
  overload: VertexColoring.Graphs.Edge.Label*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VertexColoring.Graphs.Edge.Equals(VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.Equals(VertexColoring.Graphs.Edge)
  id: Equals(VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Equals(Edge)
  nameWithType: Edge.Equals(Edge)
  fullName: VertexColoring.Graphs.Edge.Equals(VertexColoring.Graphs.Edge)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2352
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public bool Equals(Edge other)
    parameters:
    - id: other
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VertexColoring.Graphs.Edge.Equals(System.Object)
  commentId: M:VertexColoring.Graphs.Edge.Equals(System.Object)
  id: Equals(System.Object)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Edge.Equals(Object)
  fullName: VertexColoring.Graphs.Edge.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: ''
    startLine: 2357
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: VertexColoring.Graphs.Edge.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VertexColoring.Graphs.Edge.GetHashCode
  commentId: M:VertexColoring.Graphs.Edge.GetHashCode
  id: GetHashCode
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Edge.GetHashCode()
  fullName: VertexColoring.Graphs.Edge.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: ''
    startLine: 2362
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: VertexColoring.Graphs.Edge.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VertexColoring.Graphs.Edge.ToString
  commentId: M:VertexColoring.Graphs.Edge.ToString
  id: ToString
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Edge.ToString()
  fullName: VertexColoring.Graphs.Edge.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 2372
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: VertexColoring.Graphs.Edge.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VertexColoring.Graphs.Edge.CompareTo(VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.CompareTo(VertexColoring.Graphs.Edge)
  id: CompareTo(VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: CompareTo(Edge)
  nameWithType: Edge.CompareTo(Edge)
  fullName: VertexColoring.Graphs.Edge.CompareTo(VertexColoring.Graphs.Edge)
  type: Method
  source:
    id: CompareTo
    path: ''
    startLine: 2384
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  summary: "\nCompares two edges by comparing their smallest-id vertex and returning the result or, if the result is 0,\nthe result of comparing their other vertex.\n"
  example: []
  syntax:
    content: public int CompareTo(Edge other)
    parameters:
    - id: other
      type: VertexColoring.Graphs.Edge
      description: The edge to compare this instance to.
    return:
      type: System.Int32
      description: 0 if both vertices are the same, otherwise depending on numerical order of vertices, positive or negative.
    content.vb: Public Function CompareTo(other As Edge) As Integer
  overload: VertexColoring.Graphs.Edge.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VertexColoring.Graphs.Edge.GetEnumerator
  commentId: M:VertexColoring.Graphs.Edge.GetEnumerator
  id: GetEnumerator
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Edge.GetEnumerator()
  fullName: VertexColoring.Graphs.Edge.GetEnumerator()
  type: Method
  source:
    id: GetEnumerator
    path: ''
    startLine: 2394
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public IEnumerator<Vertex> GetEnumerator()
    return:
      type: IEnumerator{VertexColoring.Graphs.Vertex}
    content.vb: Public Function GetEnumerator As IEnumerator(Of Vertex)
  overload: VertexColoring.Graphs.Edge.GetEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VertexColoring.Graphs.Edge.op_Equality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.op_Equality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  id: op_Equality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Equality(Edge, Edge)
  nameWithType: Edge.Equality(Edge, Edge)
  fullName: VertexColoring.Graphs.Edge.Equality(VertexColoring.Graphs.Edge, VertexColoring.Graphs.Edge)
  type: Operator
  source:
    id: op_Equality
    path: ''
    startLine: 2402
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public static bool operator ==(Edge left, Edge right)
    parameters:
    - id: left
      type: VertexColoring.Graphs.Edge
    - id: right
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Edge, right As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VertexColoring.Graphs.Edge.op_Inequality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.op_Inequality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  id: op_Inequality(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Inequality(Edge, Edge)
  nameWithType: Edge.Inequality(Edge, Edge)
  fullName: VertexColoring.Graphs.Edge.Inequality(VertexColoring.Graphs.Edge, VertexColoring.Graphs.Edge)
  type: Operator
  source:
    id: op_Inequality
    path: ''
    startLine: 2408
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public static bool operator !=(Edge left, Edge right)
    parameters:
    - id: left
      type: VertexColoring.Graphs.Edge
    - id: right
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Edge, right As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VertexColoring.Graphs.Edge.op_LessThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.op_LessThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  id: op_LessThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: LessThan(Edge, Edge)
  nameWithType: Edge.LessThan(Edge, Edge)
  fullName: VertexColoring.Graphs.Edge.LessThan(VertexColoring.Graphs.Edge, VertexColoring.Graphs.Edge)
  type: Operator
  source:
    id: op_LessThan
    path: ''
    startLine: 2413
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public static bool operator <(Edge left, Edge right)
    parameters:
    - id: left
      type: VertexColoring.Graphs.Edge
    - id: right
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(left As Edge, right As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VertexColoring.Graphs.Edge.op_GreaterThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.op_GreaterThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  id: op_GreaterThan(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: GreaterThan(Edge, Edge)
  nameWithType: Edge.GreaterThan(Edge, Edge)
  fullName: VertexColoring.Graphs.Edge.GreaterThan(VertexColoring.Graphs.Edge, VertexColoring.Graphs.Edge)
  type: Operator
  source:
    id: op_GreaterThan
    path: ''
    startLine: 2419
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public static bool operator>(Edge left, Edge right)
    parameters:
    - id: left
      type: VertexColoring.Graphs.Edge
    - id: right
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(left As Edge, right As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VertexColoring.Graphs.Edge.op_LessThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.op_LessThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  id: op_LessThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Edge, Edge)
  nameWithType: Edge.LessThanOrEqual(Edge, Edge)
  fullName: VertexColoring.Graphs.Edge.LessThanOrEqual(VertexColoring.Graphs.Edge, VertexColoring.Graphs.Edge)
  type: Operator
  source:
    id: op_LessThanOrEqual
    path: ''
    startLine: 2425
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public static bool operator <=(Edge left, Edge right)
    parameters:
    - id: left
      type: VertexColoring.Graphs.Edge
    - id: right
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(left As Edge, right As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VertexColoring.Graphs.Edge.op_GreaterThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  commentId: M:VertexColoring.Graphs.Edge.op_GreaterThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  id: op_GreaterThanOrEqual(VertexColoring.Graphs.Edge,VertexColoring.Graphs.Edge)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Edge, Edge)
  nameWithType: Edge.GreaterThanOrEqual(Edge, Edge)
  fullName: VertexColoring.Graphs.Edge.GreaterThanOrEqual(VertexColoring.Graphs.Edge, VertexColoring.Graphs.Edge)
  type: Operator
  source:
    id: op_GreaterThanOrEqual
    path: ''
    startLine: 2430
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public static bool operator >=(Edge left, Edge right)
    parameters:
    - id: left
      type: VertexColoring.Graphs.Edge
    - id: right
      type: VertexColoring.Graphs.Edge
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(left As Edge, right As Edge) As Boolean
  overload: VertexColoring.Graphs.Edge.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VertexColoring.Graphs.Edge.#ctor(VertexColoring.Graphs.Vertex,VertexColoring.Graphs.Vertex,System.String)
  commentId: M:VertexColoring.Graphs.Edge.#ctor(VertexColoring.Graphs.Vertex,VertexColoring.Graphs.Vertex,System.String)
  id: '#ctor(VertexColoring.Graphs.Vertex,VertexColoring.Graphs.Vertex,System.String)'
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: Edge(Vertex, Vertex, String)
  nameWithType: Edge.Edge(Vertex, Vertex, String)
  fullName: VertexColoring.Graphs.Edge.Edge(VertexColoring.Graphs.Vertex, VertexColoring.Graphs.Vertex, System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2449
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public Edge(Vertex Vertex1, Vertex Vertex2, string Label)
    parameters:
    - id: Vertex1
      type: VertexColoring.Graphs.Vertex
    - id: Vertex2
      type: VertexColoring.Graphs.Vertex
    - id: Label
      type: System.String
    content.vb: Public Sub New(Vertex1 As Vertex, Vertex2 As Vertex, Label As String)
  overload: VertexColoring.Graphs.Edge.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VertexColoring.Graphs.Edge.WithVertex1(VertexColoring.Graphs.Vertex)
  commentId: M:VertexColoring.Graphs.Edge.WithVertex1(VertexColoring.Graphs.Vertex)
  id: WithVertex1(VertexColoring.Graphs.Vertex)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: WithVertex1(Vertex)
  nameWithType: Edge.WithVertex1(Vertex)
  fullName: VertexColoring.Graphs.Edge.WithVertex1(VertexColoring.Graphs.Vertex)
  type: Method
  source:
    id: WithVertex1
    path: ''
    startLine: 2456
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public Edge WithVertex1(Vertex Vertex1)
    parameters:
    - id: Vertex1
      type: VertexColoring.Graphs.Vertex
    return:
      type: VertexColoring.Graphs.Edge
    content.vb: Public Function WithVertex1(Vertex1 As Vertex) As Edge
  overload: VertexColoring.Graphs.Edge.WithVertex1*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VertexColoring.Graphs.Edge.WithVertex2(VertexColoring.Graphs.Vertex)
  commentId: M:VertexColoring.Graphs.Edge.WithVertex2(VertexColoring.Graphs.Vertex)
  id: WithVertex2(VertexColoring.Graphs.Vertex)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: WithVertex2(Vertex)
  nameWithType: Edge.WithVertex2(Vertex)
  fullName: VertexColoring.Graphs.Edge.WithVertex2(VertexColoring.Graphs.Vertex)
  type: Method
  source:
    id: WithVertex2
    path: ''
    startLine: 2461
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public Edge WithVertex2(Vertex Vertex2)
    parameters:
    - id: Vertex2
      type: VertexColoring.Graphs.Vertex
    return:
      type: VertexColoring.Graphs.Edge
    content.vb: Public Function WithVertex2(Vertex2 As Vertex) As Edge
  overload: VertexColoring.Graphs.Edge.WithVertex2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VertexColoring.Graphs.Edge.WithLabel(System.String)
  commentId: M:VertexColoring.Graphs.Edge.WithLabel(System.String)
  id: WithLabel(System.String)
  parent: VertexColoring.Graphs.Edge
  langs:
  - csharp
  - vb
  name: WithLabel(String)
  nameWithType: Edge.WithLabel(String)
  fullName: VertexColoring.Graphs.Edge.WithLabel(System.String)
  type: Method
  source:
    id: WithLabel
    path: ''
    startLine: 2466
  assemblies:
  - cs.temp.dll
  namespace: VertexColoring.Graphs
  syntax:
    content: public Edge WithLabel(string Label)
    parameters:
    - id: Label
      type: System.String
    return:
      type: VertexColoring.Graphs.Edge
    content.vb: Public Function WithLabel(Label As String) As Edge
  overload: VertexColoring.Graphs.Edge.WithLabel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VertexColoring.Graphs
  commentId: N:VertexColoring.Graphs
  isExternal: false
  name: VertexColoring.Graphs
  nameWithType: VertexColoring.Graphs
  fullName: VertexColoring.Graphs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IComparable{VertexColoring.Graphs.Edge}
  commentId: '!:IComparable{VertexColoring.Graphs.Edge}'
  definition: IComparable`1
  name: IComparable<Edge>
  nameWithType: IComparable<Edge>
  fullName: IComparable<VertexColoring.Graphs.Edge>
  nameWithType.vb: IComparable(Of Edge)
  fullName.vb: IComparable(Of VertexColoring.Graphs.Edge)
  name.vb: IComparable(Of Edge)
  spec.csharp:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VertexColoring.Graphs.Edge
    name: Edge
    nameWithType: Edge
    fullName: VertexColoring.Graphs.Edge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VertexColoring.Graphs.Edge
    name: Edge
    nameWithType: Edge
    fullName: VertexColoring.Graphs.Edge
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{VertexColoring.Graphs.Vertex}
  commentId: '!:IEnumerable{VertexColoring.Graphs.Vertex}'
  definition: IEnumerable`1
  name: IEnumerable<Vertex>
  nameWithType: IEnumerable<Vertex>
  fullName: IEnumerable<VertexColoring.Graphs.Vertex>
  nameWithType.vb: IEnumerable(Of Vertex)
  fullName.vb: IEnumerable(Of VertexColoring.Graphs.Vertex)
  name.vb: IEnumerable(Of Vertex)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VertexColoring.Graphs.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: VertexColoring.Graphs.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VertexColoring.Graphs.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: VertexColoring.Graphs.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: IEquatable{VertexColoring.Graphs.Edge}
  commentId: '!:IEquatable{VertexColoring.Graphs.Edge}'
  definition: IEquatable`1
  name: IEquatable<Edge>
  nameWithType: IEquatable<Edge>
  fullName: IEquatable<VertexColoring.Graphs.Edge>
  nameWithType.vb: IEquatable(Of Edge)
  fullName.vb: IEquatable(Of VertexColoring.Graphs.Edge)
  name.vb: IEquatable(Of Edge)
  spec.csharp:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VertexColoring.Graphs.Edge
    name: Edge
    nameWithType: Edge
    fullName: VertexColoring.Graphs.Edge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VertexColoring.Graphs.Edge
    name: Edge
    nameWithType: Edge
    fullName: VertexColoring.Graphs.Edge
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: IComparable`1
  isExternal: true
  name: IComparable<>
  nameWithType: IComparable<>
  fullName: IComparable<>
  nameWithType.vb: IComparable(Of )
  fullName.vb: IComparable(Of )
  name.vb: IComparable(Of )
  spec.csharp:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEquatable`1
  isExternal: true
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullName.vb: IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VertexColoring.Graphs.Edge.Vertex1*
  commentId: Overload:VertexColoring.Graphs.Edge.Vertex1
  isExternal: false
  name: Vertex1
  nameWithType: Edge.Vertex1
  fullName: VertexColoring.Graphs.Edge.Vertex1
- uid: VertexColoring.Graphs.Vertex
  commentId: T:VertexColoring.Graphs.Vertex
  parent: VertexColoring.Graphs
  isExternal: false
  name: Vertex
  nameWithType: Vertex
  fullName: VertexColoring.Graphs.Vertex
- uid: VertexColoring.Graphs.Edge.Vertex1
  commentId: P:VertexColoring.Graphs.Edge.Vertex1
- uid: VertexColoring.Graphs.Edge.Vertex2*
  commentId: Overload:VertexColoring.Graphs.Edge.Vertex2
  isExternal: false
  name: Vertex2
  nameWithType: Edge.Vertex2
  fullName: VertexColoring.Graphs.Edge.Vertex2
- uid: VertexColoring.Graphs.Edge.Label*
  commentId: Overload:VertexColoring.Graphs.Edge.Label
  isExternal: false
  name: Label
  nameWithType: Edge.Label
  fullName: VertexColoring.Graphs.Edge.Label
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VertexColoring.Graphs.Edge.Equals*
  commentId: Overload:VertexColoring.Graphs.Edge.Equals
  isExternal: false
  name: Equals
  nameWithType: Edge.Equals
  fullName: VertexColoring.Graphs.Edge.Equals
- uid: VertexColoring.Graphs.Edge
  commentId: T:VertexColoring.Graphs.Edge
  parent: VertexColoring.Graphs
  isExternal: false
  name: Edge
  nameWithType: Edge
  fullName: VertexColoring.Graphs.Edge
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VertexColoring.Graphs.Edge.GetHashCode*
  commentId: Overload:VertexColoring.Graphs.Edge.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Edge.GetHashCode
  fullName: VertexColoring.Graphs.Edge.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VertexColoring.Graphs.Edge.ToString*
  commentId: Overload:VertexColoring.Graphs.Edge.ToString
  isExternal: false
  name: ToString
  nameWithType: Edge.ToString
  fullName: VertexColoring.Graphs.Edge.ToString
- uid: VertexColoring.Graphs.Edge.CompareTo*
  commentId: Overload:VertexColoring.Graphs.Edge.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: Edge.CompareTo
  fullName: VertexColoring.Graphs.Edge.CompareTo
- uid: VertexColoring.Graphs.Edge.GetEnumerator*
  commentId: Overload:VertexColoring.Graphs.Edge.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: Edge.GetEnumerator
  fullName: VertexColoring.Graphs.Edge.GetEnumerator
- uid: IEnumerator{VertexColoring.Graphs.Vertex}
  commentId: '!:IEnumerator{VertexColoring.Graphs.Vertex}'
  definition: IEnumerator`1
  name: IEnumerator<Vertex>
  nameWithType: IEnumerator<Vertex>
  fullName: IEnumerator<VertexColoring.Graphs.Vertex>
  nameWithType.vb: IEnumerator(Of Vertex)
  fullName.vb: IEnumerator(Of VertexColoring.Graphs.Vertex)
  name.vb: IEnumerator(Of Vertex)
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VertexColoring.Graphs.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: VertexColoring.Graphs.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VertexColoring.Graphs.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: VertexColoring.Graphs.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerator`1
  isExternal: true
  name: IEnumerator<>
  nameWithType: IEnumerator<>
  fullName: IEnumerator<>
  nameWithType.vb: IEnumerator(Of )
  fullName.vb: IEnumerator(Of )
  name.vb: IEnumerator(Of )
  spec.csharp:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VertexColoring.Graphs.Edge.op_Equality*
  commentId: Overload:VertexColoring.Graphs.Edge.op_Equality
  isExternal: false
  name: Equality
  nameWithType: Edge.Equality
  fullName: VertexColoring.Graphs.Edge.Equality
- uid: VertexColoring.Graphs.Edge.op_Inequality*
  commentId: Overload:VertexColoring.Graphs.Edge.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: Edge.Inequality
  fullName: VertexColoring.Graphs.Edge.Inequality
- uid: VertexColoring.Graphs.Edge.op_LessThan*
  commentId: Overload:VertexColoring.Graphs.Edge.op_LessThan
  isExternal: false
  name: LessThan
  nameWithType: Edge.LessThan
  fullName: VertexColoring.Graphs.Edge.LessThan
- uid: VertexColoring.Graphs.Edge.op_GreaterThan*
  commentId: Overload:VertexColoring.Graphs.Edge.op_GreaterThan
  isExternal: false
  name: GreaterThan
  nameWithType: Edge.GreaterThan
  fullName: VertexColoring.Graphs.Edge.GreaterThan
- uid: VertexColoring.Graphs.Edge.op_LessThanOrEqual*
  commentId: Overload:VertexColoring.Graphs.Edge.op_LessThanOrEqual
  isExternal: false
  name: LessThanOrEqual
  nameWithType: Edge.LessThanOrEqual
  fullName: VertexColoring.Graphs.Edge.LessThanOrEqual
- uid: VertexColoring.Graphs.Edge.op_GreaterThanOrEqual*
  commentId: Overload:VertexColoring.Graphs.Edge.op_GreaterThanOrEqual
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: Edge.GreaterThanOrEqual
  fullName: VertexColoring.Graphs.Edge.GreaterThanOrEqual
- uid: VertexColoring.Graphs.Edge.#ctor*
  commentId: Overload:VertexColoring.Graphs.Edge.#ctor
  isExternal: false
  name: Edge
  nameWithType: Edge.Edge
  fullName: VertexColoring.Graphs.Edge.Edge
- uid: VertexColoring.Graphs.Edge.WithVertex1*
  commentId: Overload:VertexColoring.Graphs.Edge.WithVertex1
  isExternal: false
  name: WithVertex1
  nameWithType: Edge.WithVertex1
  fullName: VertexColoring.Graphs.Edge.WithVertex1
- uid: VertexColoring.Graphs.Edge.WithVertex2*
  commentId: Overload:VertexColoring.Graphs.Edge.WithVertex2
  isExternal: false
  name: WithVertex2
  nameWithType: Edge.WithVertex2
  fullName: VertexColoring.Graphs.Edge.WithVertex2
- uid: VertexColoring.Graphs.Edge.WithLabel*
  commentId: Overload:VertexColoring.Graphs.Edge.WithLabel
  isExternal: false
  name: WithLabel
  nameWithType: Edge.WithLabel
  fullName: VertexColoring.Graphs.Edge.WithLabel
